cscope 15 /home/book/sophia/code/IotSystem/bios -q 0000000109 0000009456
	@led/led_on.c

1 
	$dñay
(vﬁ©ûê
dñay_time
)

3 
dñay_time
--){};

4 
	}
}

7 
	$Àd_⁄
(
i
)

9 *
pGPFCON
 = (*)0x56000050;

10 *
pGPF0
 = (*)0x56000054;

12 i‡(
i
 == 4) {

13 *
pGPFCON
 = 0x100;

14 *
pGPF0
 = 0;

17 i‡(
i
 == 5) {

18 *
pGPFCON
 = 0x400;

19 *
pGPF0
 = 0;

21 
	}
}

24 
	$maö
()

26 *
pGPFCON
 = (*)0x56000050;

27 *
pGPF0
 = (*)0x56000054;

29 *
pGPFCON
 = 0x100;

30 *
pGPF0
 = 0;

34 
	}
}

	@uart/string_utils.c

1 
	~"°rög_utûs.h
"

3 
	#NULL
 ((*)0)

	)

10 
	#_U
 0x01

	)

11 
	#_L
 0x02

	)

12 
	#_D
 0x04

	)

13 
	#_C
 0x08

	)

14 
	#_P
 0x10

	)

15 
	#_S
 0x20

	)

16 
	#_X
 0x40

	)

17 
	#_SP
 0x80

	)

19 
	g_˘y≥
[] = {

20 
_C
,_C,_C,_C,_C,_C,_C,_C,

21 
_C
,_C|
_S
,_C|_S,_C|_S,_C|_S,_C|_S,_C,_C,

22 
_C
,_C,_C,_C,_C,_C,_C,_C,

23 
_C
,_C,_C,_C,_C,_C,_C,_C,

24 
_S
|
_SP
,
_P
,_P,_P,_P,_P,_P,_P,

25 
_P
,_P,_P,_P,_P,_P,_P,_P,

26 
_D
,_D,_D,_D,_D,_D,_D,_D,

27 
_D
,_D,
_P
,_P,_P,_P,_P,_P,

28 
_P
,
_U
|
_X
,_U|_X,_U|_X,_U|_X,_U|_X,_U|_X,_U,

29 
_U
,_U,_U,_U,_U,_U,_U,_U,

30 
_U
,_U,_U,_U,_U,_U,_U,_U,

31 
_U
,_U,_U,
_P
,_P,_P,_P,_P,

32 
_P
,
_L
|
_X
,_L|_X,_L|_X,_L|_X,_L|_X,_L|_X,_L,

33 
_L
,_L,_L,_L,_L,_L,_L,_L,

34 
_L
,_L,_L,_L,_L,_L,_L,_L,

35 
_L
,_L,_L,
_P
,_P,_P,_P,
_C
,

38 
_S
|
_SP
,
_P
,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,

39 
_P
,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,_P,

40 
_U
,_U,_U,_U,_U,_U,_U,_U,_U,_U,_U,_U,_U,_U,_U,_U,

41 
_U
,_U,_U,_U,_U,_U,_U,
_P
,_U,_U,_U,_U,_U,_U,_U,
_L
,

42 
_L
,_L,_L,_L,_L,_L,_L,_L,_L,_L,_L,_L,_L,_L,_L,_L,

43 
_L
,_L,_L,_L,_L,_L,_L,
_P
,_L,_L,_L,_L,_L,_L,_L,_L};

46 
	#__ismask
(
x
Ë(
_˘y≥
[()()(x)])

	)

48 
	#iß um
(
c
Ë((
	`__ismask
(c)&(
_U
|
_L
|
_D
)Ë!0)

	)

49 
	#ißÕha
(
c
Ë((
	`__ismask
(c)&(
_U
|
_L
)Ë!0)

	)

50 
	#is˙ål
(
c
Ë((
	`__ismask
(c)&(
_C
)Ë!0)

	)

51 
	#isdigô
(
c
Ë((
	`__ismask
(c)&(
_D
)Ë!0)

	)

52 
	#isgøph
(
c
Ë((
	`__ismask
(c)&(
_P
|
_U
|
_L
|
_D
)Ë!0)

	)

53 
	#i¶owî
(
c
Ë((
	`__ismask
(c)&(
_L
)Ë!0)

	)

54 
	#i•röt
(
c
Ë((
	`__ismask
(c)&(
_P
|
_U
|
_L
|
_D
|
_SP
)Ë!0)

	)

55 
	#i•un˘
(
c
Ë((
	`__ismask
(c)&(
_P
)Ë!0)

	)

56 
	#is•a˚
(
c
Ë((
	`__ismask
(c)&(
_S
)Ë!0)

	)

57 
	#isuµî
(
c
Ë((
	`__ismask
(c)&(
_U
)Ë!0)

	)

58 
	#isxdigô
(
c
Ë((
	`__ismask
(c)&(
_D
|
_X
)Ë!0)

	)

64 
	#isbœnk
(
c
Ë(¯=' ' || c ='\t')

	)

66 
	#ißscii
(
c
Ë((()(c))<=0x7f)

	)

67 
	#tﬂscii
(
c
Ë((()(c))&0x7f)

	)

69 
ölöe
 
	$__tﬁowî
(
c
)

71 i‡(
	`isuµî
(
c
))

72 
c
 -= 'A'-'a';

73  
c
;

74 
	}
}

76 
ölöe
 
	$__touµî
(
c
)

78 i‡(
	`i¶owî
(
c
))

79 
c
 -= 'a'-'A';

80  
c
;

81 
	}
}

83 
	#tﬁowî
(
c
Ë
	`__tﬁowî
(c)

	)

84 
	#touµî
(
c
Ë
	`__touµî
(c)

	)

87 
	$sim∂e_°πoul
(c⁄° *
˝
,**
ídp
,
ba£
)

89 
ªsu…
 = 0,
vÆue
;

91 i‡(*
˝
 == '0') {

92 
˝
++;

93 i‡((*
˝
 ='x' || *˝ ='X'Ë&& 
	`isxdigô
(cp[1])) {

94 
ba£
 = 16;

95 
˝
++;

97 i‡(!
ba£
) {

98 
ba£
 = 8;

101 i‡(!
ba£
) {

102 
ba£
 = 10;

104 
	`isxdigô
(*
˝
Ë&& (
vÆue
 = 
	`isdigô
(*˝Ë? *˝-'0' : (
	`i¶owî
(*cp)

105 ? 
	`touµî
(*
˝
Ë: *˝)-'A'+10Ë< 
ba£
) {

106 
ªsu…
 =Ñesu…*
ba£
 + 
vÆue
;

107 
˝
++;

110 i‡(
ídp
) {

111 *
ídp
 = (*)
˝
;

114  
ªsu…
;

115 
	}
}

117 
	$sim∂e_°πﬁ
(c⁄° *
˝
,**
ídp
,
ba£
)

119  *
˝
=='-' ? -
	`sim∂e_°πoul
(˝+1,
ídp
,
ba£
) : simple_strtoul(cp,endp,base);

120 
	}
}

122 *
	$gës
(
s
[])

124 
i
 = 0;

125 
c
;

129 
c
 = 
	`gëch¨
();

130 
	`putch¨
(
c
);

131 i‡(
c
 == '\n') {

132 
	`putch¨
('\r');

134 i‡(
c
 == '\r') {

135 
	`putch¨
('\n');

138 if((
c
 == '\n') || (c == '\r'))

140 
s
[
i
] = '\0';

145 
s
[
i
++] = 
c
;

148  
s
;

149 
	}
}

151 
	$gë_öt
()

153 
°r
[100];

154 
	`gës
(
°r
);

155  
	`sim∂e_°πﬁ
(
°r
, 
NULL
, 0);

156 
	}
}

158 
	$gë_uöt
()

160 
°r
[100];

161 
	`gës
(
°r
);

162  
	`sim∂e_°πoul
(
°r
, 
NULL
, 0);

163 
	}
}

	@uart/string_utils.h

1 #i‚de‡
_STRING_UTILS_H


2 
	#_STRING_UTILS_H


	)

4 
	~"u¨t.h
"

6 
sim∂e_°πﬁ
(c⁄° *
˝
,**
ídp
,
ba£
);

7 *
gës
(
s
[]);

8 
gë_öt
();

9 
gë_uöt
();

	@uart/uart.c

1 
	~"s3c2440_soc.h
"

5 
	$u¨t0_öô
()

9 
GPHCON
 &= ~((3<<4) | (3<<6));

10 
GPHCON
 |= ((2<<4) | (2<<6));

12 
GPHUP
 &= ~((1<<2) | (1<<3));

19 
UCON0
 = 0x00000005;

20 
UBRDIV0
 = 26;

23 
ULCON0
 = 0x00000003;

27 
	}
}

29 
	$putch¨
(
c
)

34 !(
UTRSTAT0
 & (1<<2)));

35 
UTXH0
 = ()
c
;

37 
	}
}

39 
	$gëch¨
()

41 !(
UTRSTAT0
 & (1<<0)));

42  
URXH0
;

43 
	}
}

45 
	$puts
(c⁄° *
s
)

47 *
s
)

49 
	`putch¨
(*
s
);

50 
s
++;

53 
	}
}

56 
	$¥ötHex
(
vÆ
)

58 
i
;

59 
¨r
[8];

62 
i
 = 0; i < 8; i++)

64 
¨r
[
i
] = 
vÆ
 & 0xf;

65 
vÆ
 >>= 4;

69 
	`puts
("0x");

70 
i
 = 7; i >=0; i--)

72 i‡(
¨r
[
i
] >= 0 &&árr[i] <= 9)

73 
	`putch¨
(
¨r
[
i
] + '0');

74 if(
¨r
[
i
] >= 0xA &&árr[i] <= 0xF)

75 
	`putch¨
(
¨r
[
i
] - 0xA + 'A');

77 
	}
}

79 
	$¥öt1
()

81 
	`puts
("abc\n\r");

82 
	}
}

84 
	$¥öt2
()

86 
	`puts
("123\n\r");

87 
	}
}

89 
	$¥ötSWIVÆ
(*
pSWI
)

91 
	`puts
("SWI val = ");

92 
	`¥ötHex
(*
pSWI
 & ~0xff000000);

93 
	`puts
("\n\r");

94 
	}
}

	@uart/uart.h

3 #i‚de‡
_UART_H


4 
	#_UART_H


	)

6 
u¨t0_öô
();

7 
putch¨
(
c
);

8 
gëch¨
();

9 
puts
(c⁄° *
s
);

10 
¥ötHex
(
vÆ
);

	@uart/uart_printf.c

1 
	~"u¨t_¥ötf.h
"

4 * 
	tva_li°
;

5 
	#_INTSIZEOF
(
n
Ë–(“Ë+ (Ë- 1Ë& ~((Ë- 1Ë)

	)

7 
	#va_°¨t
(
≠
,
v
Ë–≠ = (
va_li°
)&v + 
	`_INTSIZEOF
(vË)

	)

9 
	#va_¨g
(
≠
,
t
Ë–*— *)–≠˜∞+ 
	`_INTSIZEOF
—),áp- _INTSIZEOF—)Ë)

	)

10 
	#va_íd
(
≠
Ë–≠ = (
va_li°
)0 )

	)

12 
	ghex_èb
[]={'0','1','2','3','4','5','6','7',\

15 
	$outc
(
c
)

17 
	`__out_putch¨
(
c
);

19 
	}
}

21 
	$outs
 (c⁄° *
s
)

23 *
s
 != '\0')

24 
	`__out_putch¨
(*
s
++);

26 
	}
}

28 
	$out_num
(
n
, 
ba£
,
Àad
,
maxwidth
)

30 
m
=0;

31 
buf
[
MAX_NUMBER_BYTES
], *
s
 = buf + (buf);

32 
cou¡
=0,
i
=0;

34 *--
s
 = '\0';

36 i‡(
n
 < 0){

37 
m
 = -
n
;

40 
m
 = 
n
;

44 *--
s
 = 
hex_èb
[
m
%
ba£
];

45 
cou¡
++;

46 }(
m
 /
ba£
) != 0);

48 if–
maxwidth
 && 
cou¡
 < maxwidth){

49 
i
=
maxwidth
 - 
cou¡
; i; i--)

50 *--
s
 = 
Àad
;

53 i‡(
n
 < 0)

54 *--
s
 = '-';

56  
	`outs
(
s
);

57 
	}
}

60 
	$my_v¥ötf
(c⁄° *
fmt
, 
va_li°
 
≠
)

62 
Àad
=' ';

63 
maxwidth
=0;

65 ; *
fmt
 != '\0'; fmt++)

67 i‡(*
fmt
 != '%') {

68 
	`outc
(*
fmt
);

71 
Àad
=' ';

72 
maxwidth
=0;

75 
fmt
++;

76 if(*
fmt
 == '0'){

77 
Àad
 = '0';

78 
fmt
++;

81 *
fmt
 >= '0' && *fmt <= '9'){

82 
maxwidth
 *=10;

83 
maxwidth
 +(*
fmt
 - '0');

84 
fmt
++;

87 *
fmt
) {

88 'd': 
	`out_num
(
	`va_¨g
(
≠
, ), 10,
Àad
,
maxwidth
); ;

89 'o': 
	`out_num
(
	`va_¨g
(
≠
, ), 8,
Àad
,
maxwidth
); ;

90 'u': 
	`out_num
(
	`va_¨g
(
≠
, ), 10,
Àad
,
maxwidth
); ;

91 'x': 
	`out_num
(
	`va_¨g
(
≠
, ), 16,
Àad
,
maxwidth
); ;

92 'c': 
	`outc
(
	`va_¨g
(
≠
, )); ;

93 's': 
	`outs
(
	`va_¨g
(
≠
, *)); ;

96 
	`outc
(*
fmt
);

101 
	}
}

105 
	$¥ötf
(c⁄° *
fmt
, ...)

107 
va_li°
 
≠
;

109 
	`va_°¨t
(
≠
, 
fmt
);

110 
	`my_v¥ötf
(
fmt
, 
≠
);

111 
	`va_íd
(
≠
);

113 
	}
}

116 
	$my_¥ötf_ã°
()

118 
	`¥ötf
("This is www.100ask.org my_printfÅest\n\r") ;

119 
	`¥ötf
("test char =%c,%c\n\r", 'A','a') ;

120 
	`¥ötf
("test decimalÇumber =%d\n\r", 123456) ;

121 
	`¥ötf
("test decimalÇumber =%d\n\r", -123456) ;

122 
	`¥ötf
("test hexÇumber =0x%x\n\r", 0x55aa55aa) ;

123 
	`¥ötf
("test string =%s\n\r", "www.100ask.org") ;

124 
	`¥ötf
("num=%08d\n\r", 12345);

125 
	`¥ötf
("num=%8d\n\r", 12345);

126 
	`¥ötf
("num=0x%08x\n\r", 0x12345);

127 
	`¥ötf
("num=0x%8x\n\r", 0x12345);

128 
	`¥ötf
("num=0x%02x\n\r", 0x1);

129 
	`¥ötf
("num=0x%2x\n\r", 0x1);

131 
	`¥ötf
("num=%05d\n\r", 0x1);

132 
	`¥ötf
("num=%5d\n\r", 0x1);

135 
	}
}

	@uart/uart_printf.h

1 #i‚de‡
_UART_PRINTF_H


2 
	#_UART_PRINTF_H


	)

3 
	~"u¨t.h
"

4 
	#__out_putch¨
 
putch¨


	)

6 
	#MAX_NUMBER_BYTES
 64

	)

8 
my_¥ötf_ã°
();

9 
¥ötf
(c⁄° *
fmt
, ...);

	@uart_my/led_on.c

1 
	$dñay
(vﬁ©ûê
dñay_time
)

3 
dñay_time
--){};

4 
	}
}

7 
	$Àd_⁄
(
i
)

9 *
pGPFCON
 = (*)0x56000050;

10 *
pGPF0
 = (*)0x56000054;

12 i‡(
i
 == 4) {

13 *
pGPFCON
 = 0x100;

14 *
pGPF0
 = 0;

17 i‡(
i
 == 5) {

18 *
pGPFCON
 = 0x400;

19 *
pGPF0
 = 0;

21 
	}
}

24 
	$maö
()

26 *
pGPFCON
 = (*)0x56000050;

27 *
pGPF0
 = (*)0x56000054;

29 *
pGPFCON
 = 0x100;

30 *
pGPF0
 = 0;

34 
	}
}

	@uart_my/main.c

1 
	~"s3c2440_soc.h
"

2 
	~"u¨t.h
"

5 
	$maö
()

7 
c
;

8 
	`u¨t0_öô
();

9 
	`put_ch¨s
("hello, world!\n");

14 
c
 = 
	`gë_ch¨
();

15 
	`put_ch¨
(
c
);

19 
	}
}

	@uart_my/uart.c

1 
	~<°d¨g.h
>

2 
	~"s3c2440_soc.h
"

4 
	$u¨t0_öô
()

7 
GPHCON
 &= ~((3 << 4) | (3 << 6));

8 
GPHCON
 |= ((2 << 4) | (2 << 6));

11 
GPHUP
 &= ~((1 << 2) | (1 << 3));

14 
UCON0
 = 0x00000005;

15 
UBRDIV0
 = 26;

18 
ULCON0
 = 0x00000003;

19 
	}
}

21 
	$put_ch¨
(
c
)

23 !(
UTRSTAT0
 * (1 << 2))) {};

25 
UTXH0
 = ()
c
;

28 
	}
}

30 
	$gë_ch¨
()

32 !(
UTRSTAT0
 & (1 << 0))){};

34  
URXH0
;

35 
	}
}

37 
	$put_ch¨s
(c⁄° *
s
)

40 *
s
)

42 
	`put_ch¨
(*
s
);

43 
s
++;

47 
	}
}

50 
	$u¨t_•röt
(c⁄° *
f‹m©
, ...)

52 *
p
 = (*)&
f‹m©
;

53 
i
;

55 
	`put_ch¨s
(
p
);

63 
	}
}

	@uart_my/uart.h

1 #i‚de‡
__IOT_UART_H__


2 
	#__IOT_UART_H__


	)

4 
u¨t0_öô
();

5 
put_ch¨
(
c
);

6 
gë_ch¨
();

7 
put_ch¨s
(c⁄° *
s
);

	@
1
.
1
/usr/include
11
177
led/led_on.c
uart/string_utils.c
uart/string_utils.h
uart/uart.c
uart/uart.h
uart/uart_printf.c
uart/uart_printf.h
uart_my/led_on.c
uart_my/main.c
uart_my/uart.c
uart_my/uart.h
